Section 1 - Design & Development 

	Q1 Could you outline what you would consider to be the important considerations if you were asked to develop a web application that could potentially be used by thousands of users? 
		•	Accessibility– so that anyone who needs to or wants to should be able to use the web application
		•	Responsiveness – an important sub-category of accessibility. The web application should be accessible and useable from devices of all shapes 	
			and sizes.
		•	Security – the application should be able to handle errors and malicious attempts to violate it.
		•	Containing very clear actionable items – A user should not have to work hard to figure out what the application is supposed to do, and how they 
			are expected to interact with it.
		•	Fun –the application should not be frustrating, annoying, or boring. At best, it improves the life of the user.

	Q2 What techniques do you employ to keep up-to-date with the rapid pace of progress in the field frontend development? How do you choose which technologies are worth taking the time to learn more about? 
		On the grand scheme of things, I have not been in the industry for long. Upon entering college, I knew nothing of computer science, information technology, or web design. I relied heavily on the program I enrolled in (Information Science) and the organizations I was a part of on campus to outfit me with a set of relevant skills. Fortunately, I have been very pleased with how it turned out. I graduated with a considerably wide, albeit in some areas somewhat shallow, understanding of many technologies in the field. It laid a foundation that has enabled me to launch my career and fill in my own gaps rather quickly.

		Nowadays, I keep a daily pulse on the industry through my active participation on Twitter. There I follow influencers such as Frances West, Luke Wroblewski, Don Norman, and Venkat Subramaniam as well as other publications, organizations, and companies. I also have maintained good relationships with peers from school and colleagues at work as they have travelled all over the world in their technology and web related careers. Hearing about the technologies, processes, and priorities in their workplaces does a great deal to maintain awareness.
		
		I also have been to some conferences – most notably the JavaOne conferences. I go there to see where relevant technology is and where it is heading. While at conferences I am to evaluate the extent to which my team is keeping up with the evolutions (or revolutions) and what sorts of things we should consider in order to stay relevant.

		Periodically, I take classes from sources I believe are plugged into the most relevant skills. Sometimes these courses are offered by my employer – such as Angular2, .NET, and Drupal development. Other times, I’ve sought the courses out independently through organizations such as Girl Develop It or the Boston Java Meetup Group where I have learned Responsive Web Design, Angular, and JPA with Spring Data.
		
		I usually take the time to invest in learning new technologies as I hear chatter about them intensify. Usually, if an organization like Girl Develop It is taking the time to organize a class about a technology or concept I know is newer, I understand that it is likely very relevant. I am also heavily biased toward a technology that is well documented and already exists in a community where I know I could get help learning and implementing if needed.

Section 2 - & Deployment 

	Q1 Describe the approach you take in testing your applications. 
		The groups I’ve been a part of all express a desire to practice test-driven development, but have not had the time or patience to truly do so. Instead, folded into our agile development methodologies, we have all of our deliverables broken down into palatable stories. At sprint planning meetings we discuss the stories and decide on acceptance criteria – usually we even write procedural acceptance tests. The developers pass their stories on to the testers only after they are confident their work has passed all the acceptance criteria. I have made it a practice to be sure all my inputs are sanitized, the layouts are responsive, and the behaviors are consistent across multiple browsers before I hand over any story to the testers as well. It’s been instilled in me that responsive designing is as important and assumed as correct spelling.

		Many of our applications also have server side unit tests that are automatically run every time our applications are built and deployed to our different environments. The developers are expected to write and maintain these tests. The testers also write some automated selenium tests that get run at the same time. These testers, in our case, have been the ones tasked with writing and maintaining these tests.


	Q2 What do you value in a code base? 
		•	Modular, reusable code
		•	short methods
		•	well named objects, variables, and methods
		•	an appropriate amount of comments
		•	good API documentation

Section 3 - General

	Q1 What do you find most exciting or interesting about working in the software development field? 

		The community. 

		The innovation and creativity in this rapidly growing and evolving field is born out of the diversity and energy of the vibrant community. It’s a field where kids can make mobile apps that change lives. It’s an industry where designers are empowering the disabled – allowing them to participate in society in ways that have been previously impossible. It’s a field that allows people from all over the world to work collaboratively and remotely. It’s a field where I get to problem solve with the best problem solvers I’ve ever met – and produce tangible, shareable results.

	Q2 In your career to date, what are you most proud of and why?
		I am proud of many things in my career. However, as I pondered this question, I am sure that I am most proud of how much I’ve grown and developed in my current role on my team. Just recently, my team was discussing some code during a code review and we came across a section of code that I remember working in during my earliest days on the job. I was fresh out of school at the time and still trying to understand as much as I could as quickly as I could. I remember reviewing my code for so long before handing it over for code review. Nonetheless, within an instant of seeing it again recently, I cringed and smiled at how obviously far I had come from that time.
		
		Code organization, modularization, best practices and even team convention are things that I have continually learned about and adapted to over the past handful of years. And I don’t know if I’ve ever had such an opportunity to tangibly recognize my own growth over such a short time. I am very grateful for the grace and patience shown by my team in the beginning. But I am so proud that I have moved from being the new developer, to a confident contributor, architect, and mentor to the newer hires.